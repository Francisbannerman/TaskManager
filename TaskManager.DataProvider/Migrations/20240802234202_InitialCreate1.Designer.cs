// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManager.DataProvider;

#nullable disable

namespace TaskManager.DataProvider.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802234202_InitialCreate1")]
    partial class InitialCreate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskManager.Infrastructure.PriorityList", b =>
                {
                    b.Property<Guid>("PriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("PriorityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("PriorityId");

                    b.HasIndex("UserId");

                    b.ToTable("PriorityList");

                    b.HasData(
                        new
                        {
                            PriorityId = new Guid("d3cb887d-3a3c-4465-8ea1-2da0ce7e31b2"),
                            PriorityName = "Urgent"
                        },
                        new
                        {
                            PriorityId = new Guid("21521056-e391-473c-a4ba-485be8cf62d7"),
                            PriorityName = "Important"
                        },
                        new
                        {
                            PriorityId = new Guid("945d313f-e3b3-4b10-a823-d0d9c18ca4f3"),
                            PriorityName = "Urgent & Important"
                        });
                });

            modelBuilder.Entity("TaskManager.Infrastructure.Tasks", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateEnded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deadline")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Position")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PriorityId")
                        .HasColumnType("uuid");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TaskNotes")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("TaskId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManager.Infrastructure.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskManager.Infrastructure.PriorityList", b =>
                {
                    b.HasOne("TaskManager.Infrastructure.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskManager.Infrastructure.Tasks", b =>
                {
                    b.HasOne("TaskManager.Infrastructure.PriorityList", "Priorities")
                        .WithMany()
                        .HasForeignKey("PriorityId");

                    b.HasOne("TaskManager.Infrastructure.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Priorities");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
